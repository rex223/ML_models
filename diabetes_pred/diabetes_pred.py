# -*- coding: utf-8 -*-
"""diabetes_pred.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19g7rmLo3XuC0fyOFrLq16yiD9VDDx0nv
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

import numpy as np
import sklearn
import streamlit

print("NumPy:", np.__version__)
print("Scikit-learn:", sklearn.__version__)
print("Streamlit:", streamlit.__version__)

# !pip show scikit-learn --version

# !pip install pipreqs

df=pd.read_csv('/content/diabetes.csv')
df.head()

# pd.read_csv

df.value_counts(['Outcome'])

df.describe()

"""from this mean we can tell at wht values diabetes is possible"""

df.groupby('Outcome').mean()

x=df.drop(columns='Outcome',axis=1)
y=df['Outcome']

"""#standardization"""

scaler=StandardScaler()
df1=scaler.fit_transform(x)
print(df1)
# df1=pd.DataFrame(data=df1,df1.columns)
# df1.head()

x=df1
print(x,y,sep='\n\n')

xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.2,stratify=y,random_state=43)

print(xtrain.shape,xtest.shape,ytrain.shape,ytest.shape,x.shape)

"""#model"""

classifier=svm.SVC(kernel='linear')

classifier.fit(xtrain,ytrain)

"""#model evaluation"""

#accuray score on training data
xtrain_acc=classifier.predict(xtrain)
train_data_acc=accuracy_score(xtrain_acc,ytrain)
print(f"The accuracy score of our training data is: {100*train_data_acc:.5f} %")

#accurcay score on test data
xtest_acc=classifier.predict(xtest)
test_data_acc=accuracy_score(xtest_acc,ytest)
print(f"The accuracy score of our test data is: {100*test_data_acc:.5f} %")

"""save the trained model


"""

# !pipreqs /content --force

#save model using pickle
import pickle
with (open('model.pkl','wb')) as model_file:
  pickle.dump(classifier,model_file)

with open('scaler.pkl', 'wb') as scaler_file:
    pickle.dump(scaler, scaler_file)

